%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 96 14 498 827 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-Bold-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold-Oblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=990
%scipos_h=490
% Dessin en bas a gauche de taille 990,490
90 rotate 0 neg 1453 neg 10 div translate
[8.217609 20 div 0 0 8.217609 20 div neg 141 10 div 490 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 1980 980] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(1980,980)(66,0)
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%--use color 1 
%--end use color 1 
32 Setcolor
/background 33 def PaintBackground
/WhiteLev 32 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.800000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.800000 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.800000 0.0 1.0] def
%--use color 1 
%--end use color 1 
33 Setcolor
/background 34 def PaintBackground
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
10 Thickness
5 Thickness
5 Thickness
10 Thickness
5 Thickness
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 180 scf mul scalefont setfont
/Times-Roman findfont 140 scf mul scalefont setfont
/Times-Roman findfont 120 scf mul scalefont setfont
/Times-Roman findfont 120 scf mul scalefont setfont
/Times-Roman findfont 120 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Bold findfont 100 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 180 scf mul scalefont setfont
/Times-Roman findfont 140 scf mul scalefont setfont
/Times-Roman findfont 120 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Roman findfont 80 scf mul scalefont setfont
/Times-Roman findfont 80 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Bold findfont 100 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 240 scf mul scalefont setfont
/Times-Roman findfont 180 scf mul scalefont setfont
/Times-Roman findfont 140 scf mul scalefont setfont
/Times-Roman findfont 120 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
% SPLIT HERE
/background 7 def PaintBackground
/background 7 def PaintBackground
33 Setcolor
5 Thickness
[] 0 setdash
33 Setcolor
7 Setcolor
 (drawpoly) 10 [ -8]
[0 0 0 980 1980 980 1980 0 0 0 
] dogrey 
7 Setcolor
/absolu true def
33 Setcolor
[] 0 setdash
33 Setcolor
33 Setcolor
/Helvetica findfont 240 scf mul scalefont setfont
() 990 72 0  0.00 [990 -166 0 238] Show
%Latex:\myput{990}{908}{12}{}
0 Thickness
[] 0 setdash
7 Setcolor
 (drawbox) 4 [ 8]
[507 82 280 277 
] dogrey 
7 Setcolor
32 Setcolor
0 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[507 82 280 277 
] dogrey 
32 Setcolor
0 Setcolor
10 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 8 [ -33]
[476 390 476 112 507 82 507 359 
] dogrey 
32 Setcolor
/absolu true def
0 Setcolor
10 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 8 [ -33]
[476 390 756 390 787 359 507 359 
] dogrey 
32 Setcolor
/absolu true def
4 Setcolor
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 8 [ -5]
[598 390 631 434 665 390 598 390 
] dogrey 
4 Setcolor
/absolu true def
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag true def
 (drawpoly) 8 [ 0]
[598 390 631 434 665 390 598 390 
] dogrey 
4 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
4 Setcolor
 (fillarc) 6 [ 34]
[521 96 252 250 0 23040 
] dogrey 
4 Setcolor
33 Setcolor
5 Thickness
[] 0 setdash
33 Setcolor
5 Thickness
[] 0 setdash
 (drawsegs) 8 [ 9]
[647 220 647 109 647 220 719 179 
] dogrey 
5 Thickness
[] 0 setdash
0 Thickness
[] 0 setdash
7 Setcolor
 (drawbox) 4 [ 8]
[1535 590 280 277 
] dogrey 
7 Setcolor
33 Setcolor
[] 0 setdash
5 Thickness
33 Setcolor
 (fillarc) 6 [ 33]
[1535 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1535 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1815 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1815 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1815 867 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1815 867 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1535 867 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1535 867 0 0 0 23040 
] dogrey 
33 Setcolor
[] 0 setdash
0 Thickness
33 Setcolor
32 Setcolor
0 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1535 590 280 277 
] dogrey 
32 Setcolor
0 Setcolor
10 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 8 [ -33]
[1504 898 1504 621 1535 590 1535 868 
] dogrey 
32 Setcolor
/absolu true def
0 Setcolor
10 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 8 [ -33]
[1504 898 1784 898 1815 868 1535 868 
] dogrey 
32 Setcolor
/absolu true def
33 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 8 [ -1]
[1438 766 1504 744 1438 722 1438 766 
] dogrey 
0 Setcolor
/absolu true def
33 Setcolor
5 Thickness
[] 0 setdash
/closeflag true def
 (drawpoly) 8 [ 0]
[1438 766 1504 744 1438 722 1438 766 
] dogrey 
33 Setcolor
/absolu true def
10 Thickness
[] 0 setdash
33 Setcolor
[] 0 setdash
10 Thickness
33 Setcolor
 (fillarc) 6 [ 33]
[1563 618 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1563 618 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1787 618 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1787 618 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1787 840 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1787 840 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1563 840 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1563 840 0 0 0 23040 
] dogrey 
33 Setcolor
[] 0 setdash
10 Thickness
33 Setcolor
33 Setcolor
10 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[1563 618 224 222 
] dogrey 
33 Setcolor
33 Setcolor
10 Thickness
[] 0 setdash
33 Setcolor
[] 0 setdash
10 Thickness
33 Setcolor
 (fillarc) 6 [ 33]
[1591 812 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1591 812 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1745 812 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1745 812 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1591 812 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1591 812 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1591 683 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1591 683 0 0 0 23040 
] dogrey 
33 Setcolor
[] 0 setdash
10 Thickness
33 Setcolor
33 Setcolor
10 Thickness
[] 0 setdash
[] 0 setdash
33 Setcolor
 (drawarrows) 8 [ 142]
[1591 812 1745 812 1591 812 1591 683 
] dogrey 
[] 0 setdash
33 Setcolor
33 Setcolor
10 Thickness
[] 0 setdash
33 Setcolor
10 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 42 [ 0]
[1591 720 1599 695 1607 673 1615 655 1623 642 1631 637 1639 639 1647 648 1655 664 1663 684 
1671 708 1679 733 1687 757 1695 777 1703 792 1711 801 1719 803 1727 797 1735 784 1743 766 
1751 743 
] dogrey 
33 Setcolor
/absolu true def
5 Thickness
[] 0 setdash
0 Thickness
[] 0 setdash
7 Setcolor
 (drawbox) 4 [ 8]
[196 590 901 277 
] dogrey 
7 Setcolor
33 Setcolor
[] 0 setdash
5 Thickness
33 Setcolor
 (fillarc) 6 [ 33]
[196 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[196 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1097 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1097 590 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[1097 867 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[1097 867 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 33]
[196 867 0 0 0 23040 
] dogrey 
33 Setcolor
33 Setcolor
 (fillarc) 6 [ 34]
[196 867 0 0 0 23040 
] dogrey 
33 Setcolor
[] 0 setdash
0 Thickness
33 Setcolor
32 Setcolor
0 Thickness
[] 0 setdash
 (drawbox) 4 [ 0]
[196 590 901 277 
] dogrey 
32 Setcolor
0 Setcolor
10 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 8 [ -33]
[165 898 165 621 196 590 196 868 
] dogrey 
32 Setcolor
/absolu true def
0 Setcolor
10 Thickness
[] 0 setdash
32 Setcolor
 (drawpoly) 8 [ -33]
[165 898 1066 898 1097 868 196 868 
] dogrey 
32 Setcolor
/absolu true def
33 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
 (drawpoly) 8 [ -1]
[1097 766 1164 744 1097 722 1097 766 
] dogrey 
0 Setcolor
/absolu true def
33 Setcolor
5 Thickness
[] 0 setdash
/closeflag true def
 (drawpoly) 8 [ 0]
[1097 766 1164 744 1097 722 1097 766 
] dogrey 
33 Setcolor
/absolu true def
4 Setcolor
5 Thickness
[] 0 setdash
4 Setcolor
 (drawpoly) 8 [ -5]
[598 546 631 590 665 546 598 546 
] dogrey 
4 Setcolor
/absolu true def
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag true def
 (drawpoly) 8 [ 0]
[598 546 631 590 665 546 598 546 
] dogrey 
4 Setcolor
/absolu true def
33 Setcolor
/Helvetica findfont 120 scf mul scalefont setfont
(generator) 349 839 0  0.00 [349 719 513 119] Show
%Latex:\myput{349}{141}{6}{generator}
33 Setcolor
/Helvetica findfont 120 scf mul scalefont setfont
(square wave) 349 704 0  0.00 [349 584 680 119] Show
%Latex:\myput{349}{276}{6}{square wave}
5 Thickness
[] 0 setdash
1 Setcolor
/Times-Bold findfont 80 scf mul scalefont setfont
() 631 598 0  0.00 [631 521 0 76] Show
%Latex:\myput{631}{382}{4}{}
4 Setcolor
5 Thickness
[] 0 setdash
4 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4 [ 0]
[631 434 631 546 
] dogrey 
4 Setcolor
/absolu true def
1 Setcolor
/Times-Bold findfont 100 scf mul scalefont setfont
() 1301 860 0  0.00 [1301 764 0 95] Show
%Latex:\myput{1301}{120}{5}{}
0 Setcolor
5 Thickness
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4 [ 0]
[1164 744 1438 744 
] dogrey 
0 Setcolor
/absolu true def
33 Setcolor
5 Thickness
[] 0 setdash
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
/Helvetica findfont 100 scf mul scalefont setfont
[] 0 setdash
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
33 Setcolor
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
33 Setcolor
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
33 Setcolor
33 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 

